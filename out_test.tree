"root": root
  "fibonacci": fn
    "(": block
      "n": other
    "{": block
      "if": conditional
        "(": block
          "or": boolean
            "==": comparison
              "1": constant
              "n": other
            "==": comparison
              "0": constant
              "n": other
        "{": block
          "return": return
            "n": other
      "else": conditional
        "(": block
          "True": comparison
        "{": block
          "return": return
            "+": numeric
              "fibonacci": call
                "(": block
                  "-": numeric
                    "2": constant
                    "n": other
              "fibonacci": call
                "(": block
                  "-": numeric
                    "1": constant
                    "n": other
      "return": return
        "1": constant
  "=": assignment
    "-_": numeric
      "2": constant
    "a": other
  "some_loop": fn
    "(": block
      "x": other
      ",": punctuation
      "y": other
    "{": block
      "while": loop
        "(": block
          "True": comparison
        "{": block
          "=": assignment
            "*": numeric
              "(": block
                "-_": numeric
                  "(": block
                    "++_": numeric
                      "x": other
              "2": constant
            "y": other
      "return": return
        "+": numeric
          "(": block
            "*": numeric
              "2": constant
              "x": other
          "y": other
  "bajojajo": fn
    "(": block
    "{": block
  "print": fn
    "(": block
    "{": block
  "main": fn
    "(": block
    "{": block
      "=": assignment
        "-_": numeric
          "10": constant
        "*_": numeric
          "x": other
      "print": call
        "(": block
          "fibonacci": call
            "(": block
              "-_": numeric
                "x": other
